// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: proto/notification/notification.proto

package notification

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SendTo        string                 `protobuf:"bytes,2,opt,name=send_to,json=sendTo,proto3" json:"send_to,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	IsRead        bool                   `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_proto_notification_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Notification) GetSendTo() string {
	if x != nil {
		return x.SendTo
	}
	return ""
}

func (x *Notification) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Notification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Notification) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Notification) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SendTo        string                 `protobuf:"bytes,1,opt,name=send_to,json=sendTo,proto3" json:"send_to,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	mi := &file_proto_notification_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNotificationRequest) GetSendTo() string {
	if x != nil {
		return x.SendTo
	}
	return ""
}

func (x *CreateNotificationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateNotificationRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationResponse) Reset() {
	*x = CreateNotificationResponse{}
	mi := &file_proto_notification_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationResponse) ProtoMessage() {}

func (x *CreateNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type FindNotificationByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNotificationByIDRequest) Reset() {
	*x = FindNotificationByIDRequest{}
	mi := &file_proto_notification_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNotificationByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNotificationByIDRequest) ProtoMessage() {}

func (x *FindNotificationByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNotificationByIDRequest.ProtoReflect.Descriptor instead.
func (*FindNotificationByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{3}
}

func (x *FindNotificationByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindNotificationsByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNotificationsByUserIDRequest) Reset() {
	*x = FindNotificationsByUserIDRequest{}
	mi := &file_proto_notification_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNotificationsByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNotificationsByUserIDRequest) ProtoMessage() {}

func (x *FindNotificationsByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNotificationsByUserIDRequest.ProtoReflect.Descriptor instead.
func (*FindNotificationsByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{4}
}

func (x *FindNotificationsByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MarkAsReadByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadByUserIDRequest) Reset() {
	*x = MarkAsReadByUserIDRequest{}
	mi := &file_proto_notification_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadByUserIDRequest) ProtoMessage() {}

func (x *MarkAsReadByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadByUserIDRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{5}
}

func (x *MarkAsReadByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FindNotificationByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNotificationByIDResponse) Reset() {
	*x = FindNotificationByIDResponse{}
	mi := &file_proto_notification_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNotificationByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNotificationByIDResponse) ProtoMessage() {}

func (x *FindNotificationByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNotificationByIDResponse.ProtoReflect.Descriptor instead.
func (*FindNotificationByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{6}
}

func (x *FindNotificationByIDResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type FindNotificationsByUserIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindNotificationsByUserIDResponse) Reset() {
	*x = FindNotificationsByUserIDResponse{}
	mi := &file_proto_notification_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindNotificationsByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNotificationsByUserIDResponse) ProtoMessage() {}

func (x *FindNotificationsByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNotificationsByUserIDResponse.ProtoReflect.Descriptor instead.
func (*FindNotificationsByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{7}
}

func (x *FindNotificationsByUserIDResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type MarkAsReadByUserIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadByUserIDResponse) Reset() {
	*x = MarkAsReadByUserIDResponse{}
	mi := &file_proto_notification_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadByUserIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadByUserIDResponse) ProtoMessage() {}

func (x *MarkAsReadByUserIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadByUserIDResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadByUserIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{8}
}

func (x *MarkAsReadByUserIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FindAllNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllNotificationsRequest) Reset() {
	*x = FindAllNotificationsRequest{}
	mi := &file_proto_notification_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllNotificationsRequest) ProtoMessage() {}

func (x *FindAllNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllNotificationsRequest.ProtoReflect.Descriptor instead.
func (*FindAllNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{9}
}

type FindAllNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllNotificationsResponse) Reset() {
	*x = FindAllNotificationsResponse{}
	mi := &file_proto_notification_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllNotificationsResponse) ProtoMessage() {}

func (x *FindAllNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllNotificationsResponse.ProtoReflect.Descriptor instead.
func (*FindAllNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{10}
}

func (x *FindAllNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type PatchNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SendTo        string                 `protobuf:"bytes,2,opt,name=send_to,json=sendTo,proto3" json:"send_to,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	IsRead        bool                   `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchNotificationRequest) Reset() {
	*x = PatchNotificationRequest{}
	mi := &file_proto_notification_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchNotificationRequest) ProtoMessage() {}

func (x *PatchNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchNotificationRequest.ProtoReflect.Descriptor instead.
func (*PatchNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{11}
}

func (x *PatchNotificationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchNotificationRequest) GetSendTo() string {
	if x != nil {
		return x.SendTo
	}
	return ""
}

func (x *PatchNotificationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PatchNotificationRequest) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *PatchNotificationRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PatchNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *Notification          `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchNotificationResponse) Reset() {
	*x = PatchNotificationResponse{}
	mi := &file_proto_notification_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchNotificationResponse) ProtoMessage() {}

func (x *PatchNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchNotificationResponse.ProtoReflect.Descriptor instead.
func (*PatchNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{12}
}

func (x *PatchNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type DeleteNotificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_proto_notification_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteNotificationRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationResponse) Reset() {
	*x = DeleteNotificationResponse{}
	mi := &file_proto_notification_notification_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationResponse) ProtoMessage() {}

func (x *DeleteNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_notification_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_notification_notification_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_notification_notification_proto protoreflect.FileDescriptor

const file_proto_notification_notification_proto_rawDesc = "" +
	"\n" +
	"%proto/notification/notification.proto\x12\fnotification\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf4\x01\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\asend_to\x18\x02 \x01(\tR\x06sendTo\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x17\n" +
	"\ais_read\x18\a \x01(\bR\x06isRead\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"b\n" +
	"\x19CreateNotificationRequest\x12\x17\n" +
	"\asend_to\x18\x01 \x01(\tR\x06sendTo\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\\\n" +
	"\x1aCreateNotificationResponse\x12>\n" +
	"\fnotification\x18\x01 \x01(\v2\x1a.notification.NotificationR\fnotification\"-\n" +
	"\x1bFindNotificationByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\";\n" +
	" FindNotificationsByUserIDRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"4\n" +
	"\x19MarkAsReadByUserIDRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"^\n" +
	"\x1cFindNotificationByIDResponse\x12>\n" +
	"\fnotification\x18\x01 \x01(\v2\x1a.notification.NotificationR\fnotification\"e\n" +
	"!FindNotificationsByUserIDResponse\x12@\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1a.notification.NotificationR\rnotifications\"6\n" +
	"\x1aMarkAsReadByUserIDResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x1d\n" +
	"\x1bFindAllNotificationsRequest\"`\n" +
	"\x1cFindAllNotificationsResponse\x12@\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1a.notification.NotificationR\rnotifications\"\x8a\x01\n" +
	"\x18PatchNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x17\n" +
	"\asend_to\x18\x02 \x01(\tR\x06sendTo\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x17\n" +
	"\ais_read\x18\a \x01(\bR\x06isRead\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"[\n" +
	"\x19PatchNotificationResponse\x12>\n" +
	"\fnotification\x18\x01 \x01(\v2\x1a.notification.NotificationR\fnotification\"+\n" +
	"\x19DeleteNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"6\n" +
	"\x1aDeleteNotificationResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\x92\x06\n" +
	"\x13NotificationService\x12g\n" +
	"\x12CreateNotification\x12'.notification.CreateNotificationRequest\x1a(.notification.CreateNotificationResponse\x12m\n" +
	"\x14FindNotificationByID\x12).notification.FindNotificationByIDRequest\x1a*.notification.FindNotificationByIDResponse\x12m\n" +
	"\x14FindAllNotifications\x12).notification.FindAllNotificationsRequest\x1a*.notification.FindAllNotificationsResponse\x12|\n" +
	"\x19FindNotificationsByUserID\x12..notification.FindNotificationsByUserIDRequest\x1a/.notification.FindNotificationsByUserIDResponse\x12g\n" +
	"\x12MarkAsReadByUserID\x12'.notification.MarkAsReadByUserIDRequest\x1a(.notification.MarkAsReadByUserIDResponse\x12d\n" +
	"\x11PatchNotification\x12&.notification.PatchNotificationRequest\x1a'.notification.PatchNotificationResponse\x12g\n" +
	"\x12DeleteNotification\x12'.notification.DeleteNotificationRequest\x1a(.notification.DeleteNotificationResponseB\x14Z\x12proto/notificationb\x06proto3"

var (
	file_proto_notification_notification_proto_rawDescOnce sync.Once
	file_proto_notification_notification_proto_rawDescData []byte
)

func file_proto_notification_notification_proto_rawDescGZIP() []byte {
	file_proto_notification_notification_proto_rawDescOnce.Do(func() {
		file_proto_notification_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_notification_notification_proto_rawDesc), len(file_proto_notification_notification_proto_rawDesc)))
	})
	return file_proto_notification_notification_proto_rawDescData
}

var file_proto_notification_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_notification_notification_proto_goTypes = []any{
	(*Notification)(nil),                      // 0: notification.Notification
	(*CreateNotificationRequest)(nil),         // 1: notification.CreateNotificationRequest
	(*CreateNotificationResponse)(nil),        // 2: notification.CreateNotificationResponse
	(*FindNotificationByIDRequest)(nil),       // 3: notification.FindNotificationByIDRequest
	(*FindNotificationsByUserIDRequest)(nil),  // 4: notification.FindNotificationsByUserIDRequest
	(*MarkAsReadByUserIDRequest)(nil),         // 5: notification.MarkAsReadByUserIDRequest
	(*FindNotificationByIDResponse)(nil),      // 6: notification.FindNotificationByIDResponse
	(*FindNotificationsByUserIDResponse)(nil), // 7: notification.FindNotificationsByUserIDResponse
	(*MarkAsReadByUserIDResponse)(nil),        // 8: notification.MarkAsReadByUserIDResponse
	(*FindAllNotificationsRequest)(nil),       // 9: notification.FindAllNotificationsRequest
	(*FindAllNotificationsResponse)(nil),      // 10: notification.FindAllNotificationsResponse
	(*PatchNotificationRequest)(nil),          // 11: notification.PatchNotificationRequest
	(*PatchNotificationResponse)(nil),         // 12: notification.PatchNotificationResponse
	(*DeleteNotificationRequest)(nil),         // 13: notification.DeleteNotificationRequest
	(*DeleteNotificationResponse)(nil),        // 14: notification.DeleteNotificationResponse
	(*timestamppb.Timestamp)(nil),             // 15: google.protobuf.Timestamp
}
var file_proto_notification_notification_proto_depIdxs = []int32{
	15, // 0: notification.Notification.created_at:type_name -> google.protobuf.Timestamp
	15, // 1: notification.Notification.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: notification.CreateNotificationResponse.notification:type_name -> notification.Notification
	0,  // 3: notification.FindNotificationByIDResponse.notification:type_name -> notification.Notification
	0,  // 4: notification.FindNotificationsByUserIDResponse.notifications:type_name -> notification.Notification
	0,  // 5: notification.FindAllNotificationsResponse.notifications:type_name -> notification.Notification
	0,  // 6: notification.PatchNotificationResponse.notification:type_name -> notification.Notification
	1,  // 7: notification.NotificationService.CreateNotification:input_type -> notification.CreateNotificationRequest
	3,  // 8: notification.NotificationService.FindNotificationByID:input_type -> notification.FindNotificationByIDRequest
	9,  // 9: notification.NotificationService.FindAllNotifications:input_type -> notification.FindAllNotificationsRequest
	4,  // 10: notification.NotificationService.FindNotificationsByUserID:input_type -> notification.FindNotificationsByUserIDRequest
	5,  // 11: notification.NotificationService.MarkAsReadByUserID:input_type -> notification.MarkAsReadByUserIDRequest
	11, // 12: notification.NotificationService.PatchNotification:input_type -> notification.PatchNotificationRequest
	13, // 13: notification.NotificationService.DeleteNotification:input_type -> notification.DeleteNotificationRequest
	2,  // 14: notification.NotificationService.CreateNotification:output_type -> notification.CreateNotificationResponse
	6,  // 15: notification.NotificationService.FindNotificationByID:output_type -> notification.FindNotificationByIDResponse
	10, // 16: notification.NotificationService.FindAllNotifications:output_type -> notification.FindAllNotificationsResponse
	7,  // 17: notification.NotificationService.FindNotificationsByUserID:output_type -> notification.FindNotificationsByUserIDResponse
	8,  // 18: notification.NotificationService.MarkAsReadByUserID:output_type -> notification.MarkAsReadByUserIDResponse
	12, // 19: notification.NotificationService.PatchNotification:output_type -> notification.PatchNotificationResponse
	14, // 20: notification.NotificationService.DeleteNotification:output_type -> notification.DeleteNotificationResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_notification_notification_proto_init() }
func file_proto_notification_notification_proto_init() {
	if File_proto_notification_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_notification_notification_proto_rawDesc), len(file_proto_notification_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_notification_notification_proto_goTypes,
		DependencyIndexes: file_proto_notification_notification_proto_depIdxs,
		MessageInfos:      file_proto_notification_notification_proto_msgTypes,
	}.Build()
	File_proto_notification_notification_proto = out.File
	file_proto_notification_notification_proto_goTypes = nil
	file_proto_notification_notification_proto_depIdxs = nil
}
