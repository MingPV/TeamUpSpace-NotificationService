syntax = "proto3";

package notification;

import "google/protobuf/timestamp.proto";

option go_package = "proto/notification";

message Notification {
  int32 id = 1;
  string send_to = 2;
  string type = 3;
  string message = 4;
  bool is_read = 7;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateNotificationRequest {
  string send_to = 1;
  string type = 2;
  string message = 3;
}

message CreateNotificationResponse {
  Notification notification = 1;
}

message FindNotificationByIDRequest {
  int32 id = 1;
}

message FindNotificationsByUserIDRequest {
  string user_id = 1;
}

message MarkAsReadByUserIDRequest {
  string user_id = 1;
}

message FindNotificationByIDResponse {
  Notification notification = 1;
}

message FindNotificationsByUserIDResponse {
  repeated Notification notifications = 1;
}

message MarkAsReadByUserIDResponse {
  string message = 1;
}

message FindAllNotificationsRequest {}

message FindAllNotificationsResponse {
  repeated Notification notifications = 1;
}

message PatchNotificationRequest {
  int32 id = 1;
  string send_to = 2;
  string type = 3;
  bool is_read = 7;
  string message = 4;
}

message PatchNotificationResponse {
  Notification notification = 1;
}

message DeleteNotificationRequest {
  int32 id = 1;
}

message DeleteNotificationResponse {
  string message = 1;
}

service NotificationService {
  rpc CreateNotification(CreateNotificationRequest) returns (CreateNotificationResponse);
  rpc FindNotificationByID(FindNotificationByIDRequest) returns (FindNotificationByIDResponse);
  rpc FindAllNotifications(FindAllNotificationsRequest) returns (FindAllNotificationsResponse);
  rpc FindNotificationsByUserID(FindNotificationsByUserIDRequest) returns (FindNotificationsByUserIDResponse);
  rpc MarkAsReadByUserID(MarkAsReadByUserIDRequest) returns (MarkAsReadByUserIDResponse);
  rpc PatchNotification(PatchNotificationRequest) returns (PatchNotificationResponse);
  rpc DeleteNotification(DeleteNotificationRequest) returns (DeleteNotificationResponse);
}
